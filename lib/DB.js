// Generated by CoffeeScript 1.8.0
(function() {
  var Couch, DB, LRU, all, promise, uuid;

  promise = require('node-promise').Promise;

  all = require('node-promise').all;

  uuid = require('node-uuid');

  LRU = require('lru-cache');

  Couch = require('./CouchPersistence');

  DB = (function() {
    function DB() {}

    DB.lru = LRU();

    DB.lrudiff = LRU();

    DB.getDataStore = function() {
      if (!DB.DataStore) {
        DB.DataStore = new Couch();
        DB.DataStore.connect();
      }
      return DB.DataStore;
    };

    DB.all = function(type, cb) {
      var store;
      store = DB.getDataStore();
      if (store.all) {
        return store.all(type, cb);
      } else {
        console.log('DB.all: All not implemented in underlying persistence logic');
        return cb([]);
      }
    };

    DB.get = function(type, ids) {
      var q;
      q = new promise();
      all(ids.map(function(id) {
        var p, rv;
        rv = DB.lru.get(id);
        p = new promise();
        if (!rv) {
          DB.getDataStore().get(type, id, function(result) {
            DB.lru.set(id, result);
            return p.resolve(result);
          });
        } else {
          p.resolve(rv);
        }
        return p;
      })).then(function(result) {
        return q.resolve(result);
      });
      return q;
    };

    DB.set = function(type, obj) {
      DB.lru.set(obj.id, obj);
      return DB.getDataStore().set(type, obj, function(res) {});
    };

    return DB;

  })();

  module.exports = DB;

}).call(this);

//# sourceMappingURL=DB.js.map
