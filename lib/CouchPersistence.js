// Generated by CoffeeScript 1.8.0
(function() {
  var CouchPersistence, cradle,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  cradle = require('cradle');

  CouchPersistence = (function() {
    function CouchPersistence() {
      this.set = __bind(this.set, this);
      this.get = __bind(this.get, this);
      this.getDbFor = __bind(this.getDbFor, this);
      this.connect = __bind(this.connect, this);
      this.dbs = [];
    }

    CouchPersistence.prototype.connect = function() {
      return this.connection = new cradle.Connection;
    };

    CouchPersistence.prototype.getDbFor = function(type) {
      var db;
      db = this.dbs[type];
      if (!db) {
        db = this.connection.database(type);
        db.exists((function(_this) {
          return function(err, exists) {
            if (err) {
              return console.log('error', err);
            } else if (exists) {
              return console.log('the force is with you.');
            } else {
              console.log('database does not exists.');
              return db.create();
            }
          };
        })(this));
      }
      this.dbs[type] = db;
      return db;
    };

    CouchPersistence.prototype.get = function(type, id, cb) {
      return this.getDbFor(type).get(id, (function(_this) {
        return function(err, res) {
          if (err) {
            console.log('** Couch Get ERROR: ' + err);
          }
          if (cb) {
            return cb(res);
          }
        };
      })(this));
    };

    CouchPersistence.prototype.set = function(type, obj, cb) {
      var db, onSave;
      db = this.getDbFor(type);
      onSave = (function(_this) {
        return function(err, res, cb) {
          if (err) {
            console.log('** Couch Set ERROR: ' + err);
          }
          if (cb) {
            return cb(res);
          }
        };
      })(this);
      if (obj.id) {
        return db.save(obj.id, obj, onSave);
      } else {
        return db.save(obj, onSave);
      }
    };

    return CouchPersistence;

  })();

  module.exports = CouchPersistence;

}).call(this);

//# sourceMappingURL=CouchPersistence.js.map
