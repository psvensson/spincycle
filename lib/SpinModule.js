// Generated by CoffeeScript 1.8.0
(function() {
  var SpinModule, SuperModel, all, defer,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SuperModel = require('./SuperModel');

  defer = require('node-promise').defer;

  all = require('node-promise').allOrNone;

  SpinModule = (function(_super) {
    __extends(SpinModule, _super);

    SpinModule.type = 'SpinModule';

    SpinModule.model = [
      {
        name: 'name',
        "public": true,
        value: 'name',
        "default": 'Spin Module'
      }, {
        name: 'inputs',
        "public": true,
        value: 'inputs',
        "default": []
      }, {
        name: 'outputs',
        "public": true,
        array: true,
        type: 'SpinModule',
        ids: 'outputs'
      }
    ];

    function SpinModule(record) {
      this.record = record;
      this.postCreate = __bind(this.postCreate, this);
      return SpinModule.__super__.constructor.apply(this, arguments);
    }

    SpinModule.prototype.postCreate = function(q) {
      return q.resolve(this);
    };

    return SpinModule;

  })(SuperModel);

  module.exports = SpinModule;

}).call(this);

//# sourceMappingURL=SpinModule.js.map
